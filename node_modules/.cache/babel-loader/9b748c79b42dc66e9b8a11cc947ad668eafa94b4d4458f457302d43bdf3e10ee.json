{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hanna\\\\scam-checker-react\\\\src\\\\pages\\\\FraudContact.js\";\nimport React from 'react';\nimport NavBar from '../components/NavBar';\nimport Footer from '../components/Footer';\nimport ContactCard from '../components/ContactCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bankContacts = [{\n  name: 'Natwest',\n  customerService: '03457 888 444 (Natwest), 03457 242 424 (RBS), 03457 424 365 (Ulster NI)',\n  fraud: {\n    accountTakeoverDebit: '0800 161 5156',\n    accountTakeoverCredit: '0800 161 5155',\n    debitCardProfiling: '0345 307 0009',\n    creditCardFraud: '0800 161 5153 / +44 1268 508 020 (International)',\n    creditCardRetailDispute: '0800 904 7015',\n    creditCardFraudCommercial: '0800 161 5164',\n    creditCardDisputes: '0800 012 1369',\n    fasterPaymentFraud: '0800 161 5165',\n    mobileBankingFraud: '0800 161 5168',\n    onlineBankingFraud: '0800 161 5154',\n    openBankingFraud: '0800 161 5154',\n    smishing: '020 7183 6009',\n    offshoreFraud: '01624 637 190',\n    fraudReportsAndBlocks: '0800 028 9096',\n    fraudApplication: '0800 085 0499'\n  },\n  internationalCreditProfiling: '+44 1268 508 154',\n  customerServiceOffshore: '01534 282 850',\n  couttsFraud: '020 7770 0011',\n  actionFraud: '0300 123 2040'\n}, {\n  name: 'Barclays',\n  customerService: '0345 734 5345',\n  fraud: {\n    debitCardFraud: '0800 389 1652 / +44 1604 529 410 (International)',\n    barclaycardFraud: '0800 318 665 / +44 1452 828 309 (International)',\n    barclayPartnerFinanceFraud: '0800 152 2888 / +44 1236 681 763 (International)',\n    smartInvestorFraud: '0800 279 3667 / +44 1413 523 919 (International)',\n    otherFraud: '0800 389 1652 / +44 1604 529 410 (International)'\n  }\n}, {\n  name: 'Halifax',\n  customerService: '0345 720 3040 / +44 1132 421 984 (International)',\n  fraud: {\n    creditCardFraud: '0800 015 1515 / +44 1132 428 196 (International)',\n    onlineBankingFraud: '0800 500 3914 / +44 1132 888 408 (International)',\n    debitCardFraud: 'Report via app: Find payment > Help with this transaction > View your options > Report this transaction'\n  },\n  notes: 'For online banking fraud, inform them if money has been taken, a payment seems fraudulent, or someone knows your password, has used your account, or asked you to move money to a “safe” account.'\n}, {\n  name: 'Lloyds',\n  customerService: '0345 300 0000 / 0345 744 9900 (International)',\n  fraud: {\n    creditCardFraud: '0345 606 2172 / +44 1702 278 272 (International)',\n    onlineBankingFraud: '0800 917 7017 / +44 2074 812 614 (International)',\n    debitCardFraud: 'Report via app: Find payment > Help with this transaction > View your options > Report this transaction if someone knows your PIN or used your card without approval'\n  }\n}];\nfunction FraudContacts() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-white to-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-20 pb-10 max-w-3xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold text-gray-900 mt-8 mb-6\",\n        children: \"Fraud Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base text-gray-600 mb-6\",\n        children: \"Contact your bank\\u2019s fraud team immediately if you suspect fraudulent activity. Below are key numbers for major UK banks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), bankContacts.map(bank => /*#__PURE__*/_jsxDEV(ContactCard, {\n        title: bank.name,\n        content: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-base text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Customer Service:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 20\n            }, this), \" \", bank.customerService]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), Object.entries(bank.fraud).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), ' ', value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)), bank.internationalCreditProfiling && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"International Credit Profiling:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 22\n            }, this), \" \", bank.internationalCreditProfiling]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), bank.customerServiceOffshore && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Customer Service Offshore:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 22\n            }, this), \" \", bank.customerServiceOffshore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), bank.couttsFraud && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Coutts Fraud:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 22\n            }, this), \" \", bank.couttsFraud]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), bank.actionFraud && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Action Fraud:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 22\n            }, this), \" \", bank.actionFraud]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), bank.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-2\",\n            children: bank.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, bank.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_c = FraudContacts;\nexport default FraudContacts;\nvar _c;\n$RefreshReg$(_c, \"FraudContacts\");","map":{"version":3,"names":["React","NavBar","Footer","ContactCard","jsxDEV","_jsxDEV","bankContacts","name","customerService","fraud","accountTakeoverDebit","accountTakeoverCredit","debitCardProfiling","creditCardFraud","creditCardRetailDispute","creditCardFraudCommercial","creditCardDisputes","fasterPaymentFraud","mobileBankingFraud","onlineBankingFraud","openBankingFraud","smishing","offshoreFraud","fraudReportsAndBlocks","fraudApplication","internationalCreditProfiling","customerServiceOffshore","couttsFraud","actionFraud","debitCardFraud","barclaycardFraud","barclayPartnerFinanceFraud","smartInvestorFraud","otherFraud","notes","FraudContacts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","bank","title","content","Object","entries","key","value","replace","str","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/hanna/scam-checker-react/src/pages/FraudContact.js"],"sourcesContent":["import React from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport Footer from '../components/Footer';\r\nimport ContactCard from '../components/ContactCard';\r\n\r\nconst bankContacts = [\r\n  {\r\n    name: 'Natwest',\r\n    customerService: '03457 888 444 (Natwest), 03457 242 424 (RBS), 03457 424 365 (Ulster NI)',\r\n    fraud: {\r\n      accountTakeoverDebit: '0800 161 5156',\r\n      accountTakeoverCredit: '0800 161 5155',\r\n      debitCardProfiling: '0345 307 0009',\r\n      creditCardFraud: '0800 161 5153 / +44 1268 508 020 (International)',\r\n      creditCardRetailDispute: '0800 904 7015',\r\n      creditCardFraudCommercial: '0800 161 5164',\r\n      creditCardDisputes: '0800 012 1369',\r\n      fasterPaymentFraud: '0800 161 5165',\r\n      mobileBankingFraud: '0800 161 5168',\r\n      onlineBankingFraud: '0800 161 5154',\r\n      openBankingFraud: '0800 161 5154',\r\n      smishing: '020 7183 6009',\r\n      offshoreFraud: '01624 637 190',\r\n      fraudReportsAndBlocks: '0800 028 9096',\r\n      fraudApplication: '0800 085 0499',\r\n    },\r\n    internationalCreditProfiling: '+44 1268 508 154',\r\n    customerServiceOffshore: '01534 282 850',\r\n    couttsFraud: '020 7770 0011',\r\n    actionFraud: '0300 123 2040',\r\n  },\r\n  {\r\n    name: 'Barclays',\r\n    customerService: '0345 734 5345',\r\n    fraud: {\r\n      debitCardFraud: '0800 389 1652 / +44 1604 529 410 (International)',\r\n      barclaycardFraud: '0800 318 665 / +44 1452 828 309 (International)',\r\n      barclayPartnerFinanceFraud: '0800 152 2888 / +44 1236 681 763 (International)',\r\n      smartInvestorFraud: '0800 279 3667 / +44 1413 523 919 (International)',\r\n      otherFraud: '0800 389 1652 / +44 1604 529 410 (International)',\r\n    },\r\n  },\r\n  {\r\n    name: 'Halifax',\r\n    customerService: '0345 720 3040 / +44 1132 421 984 (International)',\r\n    fraud: {\r\n      creditCardFraud: '0800 015 1515 / +44 1132 428 196 (International)',\r\n      onlineBankingFraud: '0800 500 3914 / +44 1132 888 408 (International)',\r\n      debitCardFraud: 'Report via app: Find payment > Help with this transaction > View your options > Report this transaction',\r\n    },\r\n    notes: 'For online banking fraud, inform them if money has been taken, a payment seems fraudulent, or someone knows your password, has used your account, or asked you to move money to a “safe” account.',\r\n  },\r\n  {\r\n    name: 'Lloyds',\r\n    customerService: '0345 300 0000 / 0345 744 9900 (International)',\r\n    fraud: {\r\n      creditCardFraud: '0345 606 2172 / +44 1702 278 272 (International)',\r\n      onlineBankingFraud: '0800 917 7017 / +44 2074 812 614 (International)',\r\n      debitCardFraud: 'Report via app: Find payment > Help with this transaction > View your options > Report this transaction if someone knows your PIN or used your card without approval',\r\n    },\r\n  },\r\n];\r\n\r\nfunction FraudContacts() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-gray-100\">\r\n      <NavBar />\r\n      <div className=\"pt-20 pb-10 max-w-3xl mx-auto px-4\">\r\n        <h1 className=\"text-3xl font-semibold text-gray-900 mt-8 mb-6\">Fraud Contacts</h1>\r\n        <p className=\"text-base text-gray-600 mb-6\">Contact your bank’s fraud team immediately if you suspect fraudulent activity. Below are key numbers for major UK banks.</p>\r\n\r\n        {bankContacts.map((bank) => (\r\n          <ContactCard\r\n            key={bank.name}\r\n            title={bank.name}\r\n            content={\r\n              <div className=\"text-base text-gray-600\">\r\n                <p><strong>Customer Service:</strong> {bank.customerService}</p>\r\n                {Object.entries(bank.fraud).map(([key, value]) => (\r\n                  <p key={key}>\r\n                    <strong>\r\n                      {key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:\r\n                    </strong>{' '}\r\n                    {value}\r\n                  </p>\r\n                ))}\r\n                {bank.internationalCreditProfiling && (\r\n                  <p><strong>International Credit Profiling:</strong> {bank.internationalCreditProfiling}</p>\r\n                )}\r\n                {bank.customerServiceOffshore && (\r\n                  <p><strong>Customer Service Offshore:</strong> {bank.customerServiceOffshore}</p>\r\n                )}\r\n                {bank.couttsFraud && (\r\n                  <p><strong>Coutts Fraud:</strong> {bank.couttsFraud}</p>\r\n                )}\r\n                {bank.actionFraud && (\r\n                  <p><strong>Action Fraud:</strong> {bank.actionFraud}</p>\r\n                )}\r\n                {bank.notes && <p className=\"text-sm text-gray-500 mt-2\">{bank.notes}</p>}\r\n              </div>\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FraudContacts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}