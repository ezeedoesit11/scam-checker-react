{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hanna\\\\scam-checker-react\\\\src\\\\pages\\\\ScamChecker.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ResultCard from '../components/ResultCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst paymentCategories = ['Car Purchase', 'Crypto Payment', 'Friend or Family Request', 'Own Account Transfer', 'Building Work', 'Investment', 'House Purchase', 'Loan Repayment', 'Multiple Payments', 'Other'];\nconst questionFlows = {\n  'Car Purchase': [{\n    question: 'Where did you find the car?',\n    options: ['Facebook', 'eBay', 'AutoTrader', 'Dealership', 'Other']\n  }, {\n    question: 'Have you seen the car or test driven it in person?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Is it a private seller or a dealership?',\n    options: ['Private Seller', 'Dealership']\n  }, {\n    question: 'Are you being asked to pay before physically collecting the car?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'How did you receive the bank details?',\n    options: ['In person', 'Email/Text', 'Phone']\n  }],\n  'Crypto Payment': [{\n    question: 'Which platform are you sending money to?',\n    options: ['Coinbase', 'Binance', 'Other']\n  }, {\n    question: 'Did you open the crypto account yourself?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Does anyone else have access to the account?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Who asked you to make the payment?',\n    options: ['No one', 'Someone online', 'Someone on phone']\n  }, {\n    question: 'Are you expecting large returns with little risk?',\n    options: ['Yes', 'No']\n  }],\n  'Friend or Family Request': [{\n    question: 'Who is asking for money?',\n    options: ['Friend', 'Family', 'Online contact']\n  }, {\n    question: 'Have you met them in real life?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Are you being asked to keep this secret?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'What is the money for?',\n    type: 'text'\n  }],\n  'Own Account Transfer': [{\n    question: 'Did you open this account yourself?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Are you moving money because someone told you to?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Has anyone said your account is compromised?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Has the term “safe account” been mentioned?',\n    options: ['Yes', 'No']\n  }],\n  'Building Work': [{\n    question: 'Is the work complete or ongoing?',\n    options: ['Complete', 'Ongoing']\n  }, {\n    question: 'Who recommended the company?',\n    options: ['Friend/Family', 'Online', 'No one']\n  }, {\n    question: 'Are you being asked to pay before the work is finished?',\n    options: ['Yes', 'No']\n  }],\n  'Investment': [{\n    question: 'Who recommended the investment?',\n    options: ['Friend', 'Online', 'Phone']\n  }, {\n    question: 'Is the company FCA regulated?',\n    options: ['Yes', 'No', 'Unsure']\n  }, {\n    question: 'Have you been pressured to act quickly?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Is the return unusually high?',\n    options: ['Yes', 'No']\n  }],\n  'House Purchase': [{\n    question: 'Have you seen the house in person?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Is the payment going to a solicitor?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Did you verify their details?',\n    options: ['Yes', 'No']\n  }],\n  'Loan Repayment': [{\n    question: 'Is it a known or unknown company?',\n    options: ['Known', 'Unknown']\n  }, {\n    question: 'Did you apply for the loan yourself?',\n    options: ['Yes', 'No']\n  }, {\n    question: 'Are you being asked to pay a fee before getting funds?',\n    options: ['Yes', 'No']\n  }],\n  'Multiple Payments': [{\n    question: 'Why are you making multiple payments instead of one?',\n    type: 'text'\n  }, {\n    question: 'Who suggested splitting it up?',\n    options: ['You', 'Them']\n  }, {\n    question: 'Is this for one item or several?',\n    options: ['One', 'Several']\n  }],\n  'Other': [{\n    question: 'Please describe the payment request:',\n    type: 'text'\n  }]\n};\nfunction ScamChecker() {\n  _s();\n  const [category, setCategory] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [result, setResult] = useState(null);\n  const handleCategorySelect = selectedCategory => {\n    setCategory(selectedCategory);\n    setCurrentQuestionIndex(0);\n    setAnswers([]);\n    setResult(null);\n  };\n  const handleAnswer = answer => {\n    const newAnswers = [...answers, answer];\n    setAnswers(newAnswers);\n    const questions = questionFlows[category];\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      evaluateRisk(newAnswers);\n    }\n  };\n  const evaluateRisk = answers => {\n    let riskScore = 0;\n    let explanation = '';\n    let nextSteps = '';\n    switch (category) {\n      case 'Car Purchase':\n        if (answers[1] === 'No' && answers[3] === 'Yes') {\n          riskScore = 90; // Not seen + pay before pickup\n          explanation = 'You’re being asked to pay before seeing the car, a common scam tactic.';\n          nextSteps = 'Do not send payment. Verify the car in person first.';\n        } else if (answers[2] === 'Private Seller' && answers[3] === 'Yes') {\n          riskScore = 70;\n          explanation = 'Private sellers asking for payment upfront carry higher risk.';\n          nextSteps = 'Use a protected payment method or inspect the car first.';\n        } else {\n          riskScore = 10;\n          explanation = 'No strong scam indicators detected.';\n          nextSteps = 'Proceed with caution.';\n        }\n        break;\n      case 'Crypto Payment':\n        if (answers[1] === 'No' || answers[4] === 'Yes') {\n          riskScore = 90;\n          explanation = 'Someone else opening your account or promising high returns is a red flag.';\n          nextSteps = 'Do not proceed. Secure your accounts and report this.';\n        } else if (answers[3] === 'Someone online') {\n          riskScore = 60;\n          explanation = 'Unsolicited crypto requests are suspicious.';\n          nextSteps = 'Research thoroughly before proceeding.';\n        } else {\n          riskScore = 20;\n          explanation = 'No major risks identified.';\n          nextSteps = 'Ensure your account is secure.';\n        }\n        break;\n      // Add similar logic for other categories (shortened for brevity)\n      default:\n        riskScore = 50;\n        explanation = 'Limited information provided.';\n        nextSteps = 'Provide more details for a full analysis.';\n    }\n    setResult({\n      riskLevel: riskScore >= 80 ? 'Extremely High' : riskScore >= 60 ? 'High' : riskScore >= 40 ? 'Medium' : 'Low',\n      explanation,\n      nextSteps: nextSteps + ' Contact Action Fraud (0300 123 2040) if unsure.'\n    });\n  };\n  const currentQuestion = category && questionFlows[category][currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-20 pb-10 max-w-3xl mx-auto px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Payment Scam Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-gray-600\",\n      children: \"Let\\u2019s check if your payment request is safe.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), !category && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: \"What type of payment are you making?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 grid grid-cols-2 sm:grid-cols-3 gap-4\",\n        children: paymentCategories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCategorySelect(cat),\n          className: \"p-3 bg-blue-100 text-blue-800 rounded-xl hover:bg-blue-200 transition\",\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), category && !result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: currentQuestion.options ? currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          className: \"mr-2 mb-2 px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300\",\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: e => e.key === 'Enter' && handleAnswer(e.target.value),\n          className: \"w-full p-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          placeholder: \"Type your answer and press Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(ResultCard, {\n        ...result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCategory(null),\n          className: \"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-6 py-2 bg-gray-300 text-gray-800 rounded-lg opacity-50 cursor-not-allowed\",\n          disabled: true,\n          children: \"Chat with Advisor (Coming Soon)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(ScamChecker, \"CRt2mcuRimyVb/aY3qXX8IysgXk=\");\n_c = ScamChecker;\nexport default ScamChecker;\nvar _c;\n$RefreshReg$(_c, \"ScamChecker\");","map":{"version":3,"names":["useState","ResultCard","jsxDEV","_jsxDEV","paymentCategories","questionFlows","question","options","type","ScamChecker","_s","category","setCategory","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","result","setResult","handleCategorySelect","selectedCategory","handleAnswer","answer","newAnswers","questions","length","evaluateRisk","riskScore","explanation","nextSteps","riskLevel","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","option","onKeyPress","e","key","target","value","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hanna/scam-checker-react/src/pages/ScamChecker.js"],"sourcesContent":["import { useState } from 'react';\r\nimport ResultCard from '../components/ResultCard';\r\n\r\nconst paymentCategories = [\r\n  'Car Purchase', 'Crypto Payment', 'Friend or Family Request', 'Own Account Transfer',\r\n  'Building Work', 'Investment', 'House Purchase', 'Loan Repayment', 'Multiple Payments', 'Other'\r\n];\r\n\r\nconst questionFlows = {\r\n  'Car Purchase': [\r\n    { question: 'Where did you find the car?', options: ['Facebook', 'eBay', 'AutoTrader', 'Dealership', 'Other'] },\r\n    { question: 'Have you seen the car or test driven it in person?', options: ['Yes', 'No'] },\r\n    { question: 'Is it a private seller or a dealership?', options: ['Private Seller', 'Dealership'] },\r\n    { question: 'Are you being asked to pay before physically collecting the car?', options: ['Yes', 'No'] },\r\n    { question: 'How did you receive the bank details?', options: ['In person', 'Email/Text', 'Phone'] },\r\n  ],\r\n  'Crypto Payment': [\r\n    { question: 'Which platform are you sending money to?', options: ['Coinbase', 'Binance', 'Other'] },\r\n    { question: 'Did you open the crypto account yourself?', options: ['Yes', 'No'] },\r\n    { question: 'Does anyone else have access to the account?', options: ['Yes', 'No'] },\r\n    { question: 'Who asked you to make the payment?', options: ['No one', 'Someone online', 'Someone on phone'] },\r\n    { question: 'Are you expecting large returns with little risk?', options: ['Yes', 'No'] },\r\n  ],\r\n  'Friend or Family Request': [\r\n    { question: 'Who is asking for money?', options: ['Friend', 'Family', 'Online contact'] },\r\n    { question: 'Have you met them in real life?', options: ['Yes', 'No'] },\r\n    { question: 'Are you being asked to keep this secret?', options: ['Yes', 'No'] },\r\n    { question: 'What is the money for?', type: 'text' },\r\n  ],\r\n  'Own Account Transfer': [\r\n    { question: 'Did you open this account yourself?', options: ['Yes', 'No'] },\r\n    { question: 'Are you moving money because someone told you to?', options: ['Yes', 'No'] },\r\n    { question: 'Has anyone said your account is compromised?', options: ['Yes', 'No'] },\r\n    { question: 'Has the term “safe account” been mentioned?', options: ['Yes', 'No'] },\r\n  ],\r\n  'Building Work': [\r\n    { question: 'Is the work complete or ongoing?', options: ['Complete', 'Ongoing'] },\r\n    { question: 'Who recommended the company?', options: ['Friend/Family', 'Online', 'No one'] },\r\n    { question: 'Are you being asked to pay before the work is finished?', options: ['Yes', 'No'] },\r\n  ],\r\n  'Investment': [\r\n    { question: 'Who recommended the investment?', options: ['Friend', 'Online', 'Phone'] },\r\n    { question: 'Is the company FCA regulated?', options: ['Yes', 'No', 'Unsure'] },\r\n    { question: 'Have you been pressured to act quickly?', options: ['Yes', 'No'] },\r\n    { question: 'Is the return unusually high?', options: ['Yes', 'No'] },\r\n  ],\r\n  'House Purchase': [\r\n    { question: 'Have you seen the house in person?', options: ['Yes', 'No'] },\r\n    { question: 'Is the payment going to a solicitor?', options: ['Yes', 'No'] },\r\n    { question: 'Did you verify their details?', options: ['Yes', 'No'] },\r\n  ],\r\n  'Loan Repayment': [\r\n    { question: 'Is it a known or unknown company?', options: ['Known', 'Unknown'] },\r\n    { question: 'Did you apply for the loan yourself?', options: ['Yes', 'No'] },\r\n    { question: 'Are you being asked to pay a fee before getting funds?', options: ['Yes', 'No'] },\r\n  ],\r\n  'Multiple Payments': [\r\n    { question: 'Why are you making multiple payments instead of one?', type: 'text' },\r\n    { question: 'Who suggested splitting it up?', options: ['You', 'Them'] },\r\n    { question: 'Is this for one item or several?', options: ['One', 'Several'] },\r\n  ],\r\n  'Other': [\r\n    { question: 'Please describe the payment request:', type: 'text' },\r\n  ],\r\n};\r\n\r\nfunction ScamChecker() {\r\n  const [category, setCategory] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleCategorySelect = (selectedCategory) => {\r\n    setCategory(selectedCategory);\r\n    setCurrentQuestionIndex(0);\r\n    setAnswers([]);\r\n    setResult(null);\r\n  };\r\n\r\n  const handleAnswer = (answer) => {\r\n    const newAnswers = [...answers, answer];\r\n    setAnswers(newAnswers);\r\n\r\n    const questions = questionFlows[category];\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      evaluateRisk(newAnswers);\r\n    }\r\n  };\r\n\r\n  const evaluateRisk = (answers) => {\r\n    let riskScore = 0;\r\n    let explanation = '';\r\n    let nextSteps = '';\r\n\r\n    switch (category) {\r\n      case 'Car Purchase':\r\n        if (answers[1] === 'No' && answers[3] === 'Yes') {\r\n          riskScore = 90; // Not seen + pay before pickup\r\n          explanation = 'You’re being asked to pay before seeing the car, a common scam tactic.';\r\n          nextSteps = 'Do not send payment. Verify the car in person first.';\r\n        } else if (answers[2] === 'Private Seller' && answers[3] === 'Yes') {\r\n          riskScore = 70;\r\n          explanation = 'Private sellers asking for payment upfront carry higher risk.';\r\n          nextSteps = 'Use a protected payment method or inspect the car first.';\r\n        } else {\r\n          riskScore = 10;\r\n          explanation = 'No strong scam indicators detected.';\r\n          nextSteps = 'Proceed with caution.';\r\n        }\r\n        break;\r\n      case 'Crypto Payment':\r\n        if (answers[1] === 'No' || answers[4] === 'Yes') {\r\n          riskScore = 90;\r\n          explanation = 'Someone else opening your account or promising high returns is a red flag.';\r\n          nextSteps = 'Do not proceed. Secure your accounts and report this.';\r\n        } else if (answers[3] === 'Someone online') {\r\n          riskScore = 60;\r\n          explanation = 'Unsolicited crypto requests are suspicious.';\r\n          nextSteps = 'Research thoroughly before proceeding.';\r\n        } else {\r\n          riskScore = 20;\r\n          explanation = 'No major risks identified.';\r\n          nextSteps = 'Ensure your account is secure.';\r\n        }\r\n        break;\r\n      // Add similar logic for other categories (shortened for brevity)\r\n      default:\r\n        riskScore = 50;\r\n        explanation = 'Limited information provided.';\r\n        nextSteps = 'Provide more details for a full analysis.';\r\n    }\r\n\r\n    setResult({\r\n      riskLevel: riskScore >= 80 ? 'Extremely High' : riskScore >= 60 ? 'High' : riskScore >= 40 ? 'Medium' : 'Low',\r\n      explanation,\r\n      nextSteps: nextSteps + ' Contact Action Fraud (0300 123 2040) if unsure.',\r\n    });\r\n  };\r\n\r\n  const currentQuestion = category && questionFlows[category][currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"pt-20 pb-10 max-w-3xl mx-auto px-4\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800\">Payment Scam Checker</h1>\r\n      <p className=\"mt-2 text-gray-600\">Let’s check if your payment request is safe.</p>\r\n\r\n      {!category && (\r\n        <div className=\"mt-6\">\r\n          <h2 className=\"text-lg font-semibold\">What type of payment are you making?</h2>\r\n          <div className=\"mt-4 grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n            {paymentCategories.map((cat) => (\r\n              <button\r\n                key={cat}\r\n                onClick={() => handleCategorySelect(cat)}\r\n                className=\"p-3 bg-blue-100 text-blue-800 rounded-xl hover:bg-blue-200 transition\"\r\n              >\r\n                {cat}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {category && !result && (\r\n        <div className=\"mt-6\">\r\n          <h2 className=\"text-lg font-semibold\">{currentQuestion.question}</h2>\r\n          <div className=\"mt-4\">\r\n            {currentQuestion.options ? (\r\n              currentQuestion.options.map((option) => (\r\n                <button\r\n                  key={option}\r\n                  onClick={() => handleAnswer(option)}\r\n                  className=\"mr-2 mb-2 px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300\"\r\n                >\r\n                  {option}\r\n                </button>\r\n              ))\r\n            ) : (\r\n              <input\r\n                type=\"text\"\r\n                onKeyPress={(e) => e.key === 'Enter' && handleAnswer(e.target.value)}\r\n                className=\"w-full p-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Type your answer and press Enter\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"mt-6\">\r\n          <ResultCard {...result} />\r\n          <div className=\"mt-4 flex space-x-4\">\r\n            <button onClick={() => setCategory(null)} className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\r\n              Start Over\r\n            </button>\r\n            <button className=\"px-6 py-2 bg-gray-300 text-gray-800 rounded-lg opacity-50 cursor-not-allowed\" disabled>\r\n              Chat with Advisor (Coming Soon)\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScamChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}