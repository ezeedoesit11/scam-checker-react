{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hanna\\\\scam-checker-react\\\\src\\\\pages\\\\FraudContact.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ContactCard from '../components/ContactCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FraudContact() {\n  _s();\n  const contacts = [{\n    name: 'Action Fraud (UK)',\n    phone: '0300 123 2040'\n  }, {\n    name: 'Barclays Bank',\n    phone: '0345 734 5345'\n  }, {\n    name: 'HMRC',\n    phone: '0300 200 3300'\n  }];\n  const [search, setSearch] = useState('');\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-20 pb-10 max-w-3xl mx-auto px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800\",\n      children: \"Fraud Contact Directory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      className: \"w-full mt-4 p-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      placeholder: \"Search for a contact...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 space-y-4\",\n      children: filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(ContactCard, {\n        ...contact\n      }, contact.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(FraudContact, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n_c = FraudContact;\nexport default FraudContact;\nvar _c;\n$RefreshReg$(_c, \"FraudContact\");","map":{"version":3,"names":["useState","ContactCard","jsxDEV","_jsxDEV","FraudContact","_s","contacts","name","phone","search","setSearch","filteredContacts","filter","contact","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","_c","$RefreshReg$"],"sources":["C:/Users/hanna/scam-checker-react/src/pages/FraudContact.js"],"sourcesContent":["import { useState } from 'react';\r\nimport ContactCard from '../components/ContactCard';\r\n\r\nfunction FraudContact() {\r\n  const contacts = [\r\n    { name: 'Action Fraud (UK)', phone: '0300 123 2040' },\r\n    { name: 'Barclays Bank', phone: '0345 734 5345' },\r\n    { name: 'HMRC', phone: '0300 200 3300' },\r\n  ];\r\n  const [search, setSearch] = useState('');\r\n\r\n  const filteredContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"pt-20 pb-10 max-w-3xl mx-auto px-4\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800\">Fraud Contact Directory</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        className=\"w-full mt-4 p-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        placeholder=\"Search for a contact...\"\r\n      />\r\n      <div className=\"mt-6 space-y-4\">\r\n        {filteredContacts.map((contact) => (\r\n          <ContactCard key={contact.name} {...contact} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FraudContact;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAG,CACf;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAgB,CAAC,EACrD;IAAED,IAAI,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAgB,CAAC,EACjD;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAgB,CAAC,CACzC;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,gBAAgB,GAAGL,QAAQ,CAACM,MAAM,CAAEC,OAAO,IAC/CA,OAAO,CAACN,IAAI,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,CAAC,CAAC,CAC1D,CAAC;EAED,oBACEX,OAAA;IAAKa,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDd,OAAA;MAAIa,SAAS,EAAC,kCAAkC;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7ElB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,MAAO;MACde,QAAQ,EAAGC,CAAC,IAAKf,SAAS,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CP,SAAS,EAAC,uGAAuG;MACjHW,WAAW,EAAC;IAAyB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFlB,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BN,gBAAgB,CAACiB,GAAG,CAAEf,OAAO,iBAC5BV,OAAA,CAACF,WAAW;QAAA,GAAwBY;MAAO,GAAzBA,OAAO,CAACN,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CA7BQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA+BrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}